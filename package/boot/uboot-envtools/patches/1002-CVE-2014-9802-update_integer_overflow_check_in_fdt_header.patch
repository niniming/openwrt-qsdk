From 0884abb431a51c88188979e1dadb403306f54437 Mon Sep 17 00:00:00 2001
From: Vijay Kumar Pendoti <vpendo@codeaurora.org>
Date: Fri, 18 Mar 2016 18:17:01 +0530
Subject: platform: msm_shared: change location of integer overflow checks

Integer overflow in fdt header removed in open source library,
added them in dev_tree.c file.

CRs-Fixed: 979426
Change-Id: I5649ff5c24cdb6b60f546417555f38691cd1005a
---
Index: u-boot-2014.10/lib/libfdt/fdt.c
===================================================================
--- u-boot-2014.10.orig/lib/libfdt/fdt.c
+++ u-boot-2014.10/lib/libfdt/fdt.c
@@ -16,6 +16,8 @@
 
 int fdt_check_header(const void *fdt)
 {
+	uintptr_t fdt_start, fdt_end;
+	fdt_start = (uintptr_t)fdt;
 	if (fdt_magic(fdt) == FDT_MAGIC) {
 		/* Complete tree */
 		if (fdt_version(fdt) < FDT_FIRST_SUPPORTED_VERSION)
@@ -30,16 +32,23 @@ int fdt_check_header(const void *fdt)
 		return -FDT_ERR_BADMAGIC;
 	}
 
-	if (fdt_off_dt_struct(fdt) > (UINT_MAX - fdt_size_dt_struct(fdt)))
+	if(fdt_start + fdt_totalsize(fdt) < fdt_start)
+	{
+		dprintf(CRITICAL,"Integer over in fdt header %s\t%d",__func__,__LINE__);
 		return FDT_ERR_BADOFFSET;
+	}
+	fdt_end = fdt_start + fdt_totalsize(fdt);
 
-	if (fdt_off_dt_strings(fdt) > (UINT_MAX -  fdt_size_dt_strings(fdt)))
+	if (((uint64_t)fdt_start + (uint64_t)fdt_off_dt_struct(fdt) + (uint64_t)fdt_size_dt_struct(fdt)) > UINT_MAX)
 		return FDT_ERR_BADOFFSET;
 
-	if ((fdt_off_dt_struct(fdt) + fdt_size_dt_struct(fdt)) > fdt_totalsize(fdt))
+	if ((fdt_start + fdt_off_dt_struct(fdt) + fdt_size_dt_struct(fdt)) > fdt_end)
 		return FDT_ERR_BADOFFSET;
 
-	if ((fdt_off_dt_strings(fdt) + fdt_size_dt_strings(fdt)) > fdt_totalsize(fdt))
+	if (((uint64_t)fdt_start + (uint64_t)fdt_off_dt_strings(fdt) + (uint64_t)fdt_size_dt_strings(fdt)) > UINT_MAX)
+	return FDT_ERR_BADOFFSET;
+
+	if ((fdt_start + fdt_off_dt_strings(fdt) + fdt_size_dt_strings(fdt)) > fdt_end)
 		return FDT_ERR_BADOFFSET;
 
 	return 0;
